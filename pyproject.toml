[tool.poetry]
name = "poetry-conda"
version = "0.1.0"
description = "Poetry plugin that allows for the creation of virtual environments using Poetry, without interfering with the Conda environment in which Poetry is installed"
authors = ["Renan Santos <renan.engmec@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/renan-r-santos/poetry-conda"
documentation = "https://github.com/renan-r-santos/poetry-conda"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Typing :: Typed",
]

packages = [
    { include = "poetry_conda", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.8"
poetry = "^1.3.0"

[tool.poetry.group.dev.dependencies]
black = "~23.1"
mypy = "~1.1"
pre-commit = "~3.1"
pytest = "~7.2"
ruff = "0.0.255"

[tool.poetry.plugins."poetry.application.plugin"]
poetry-conda = "poetry_conda.plugin:PoetryCondaPlugin"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
color = true
line-length = 120
target-version = ['py38']

[tool.mypy]
files = ["src", "tests"]
show_error_codes = true
strict = true

[tool.ruff]
line-length = 120
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
]
ignore = [
    "E501",  # line too long, handled by black
]

[tool.ruff.isort]
known-third-party = ["poetry"]
