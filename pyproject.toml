[tool.poetry]
name = "poetry-conda"
version = "0.1.3"
description = "Poetry plugin that allows for the creation of virtual environments using Poetry, without interfering with the Conda environment in which Poetry is installed"
authors = ["Renan Santos <renan.engmec@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/renan-r-santos/poetry-conda"
documentation = "https://github.com/renan-r-santos/poetry-conda"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]

packages = [{ include = "poetry_conda", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.9,<4"
poetry = ">=1.3.0,<2"

[tool.poetry.group.dev.dependencies]
mypy = ">=1,<2"
pytest = ">=8,<9"
ruff = ">=0.6,<0.7"
nox_poetry = ">=1,<2"

[tool.poetry.plugins."poetry.application.plugin"]
poetry-conda = "poetry_conda.plugin:PoetryCondaPlugin"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["src", "tests"]
show_error_codes = true
strict = true

[tool.ruff]
src = ["src"]
line-length = 120
target-version = "py39"

[tool.ruff.lint]
extend-select = [
    "I",   # isort
    "N",   # pep8-naming
    "RUF", # ruff
    "B",   # flake8-bugbear
    "N",   # flake8-broken-line
    "C4",  # flake8-comprehensions
    "PIE", # flake8-pie
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "ERA", # flake8-eradicate
]
